import discord
from discord import Option
from discord.ui import Button, View
import random
from datetime import datetime
import asyncio

from config import TOKEN
from config import GAME_CHANNEL_ID 

from game_state import GameState


bot = discord.Bot(intents=discord.Intents.default())

game_state = GameState(bot, GAME_CHANNEL_ID)


class RegisterButton(Button):
    def __init__(self, label: str, game_state: GameState):
        super().__init__(label=label, style=discord.ButtonStyle.green)
        self.game_state = game_state  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä GameState –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ callback

    async def callback(self, interaction: discord.Interaction):
        user = interaction.user
        is_full, response = await self.game_state.register_player(user)  # –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
        await interaction.response.send_message(response, ephemeral=True)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


@bot.event
async def on_ready():
    print(f'{bot.user} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord!')
    #–≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
    channel = bot.get_channel(GAME_CHANNEL_ID)
    if channel:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è
        await channel.send("–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!")


@bot.event
async def on_slash_command_error(ctx, error):
    if isinstance(error, commands.errors.CheckFailure):
        await ctx.respond('–£ –≤–∞—Å –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.', ephemeral=True)
    else:
        await ctx.respond('–ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.', ephemeral=True)
        print(f'–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ {ctx.command.name}: {error}')


@bot.event
async def on_rate_limit(ctx, rate_limit_info):
    print(f"–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤: {rate_limit_info}")
    await ctx.respond('–ë–æ—Ç —Å–µ–π—á–∞—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', ephemeral=True)


@bot.slash_command(name='start_registration', description='–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏–≥—Ä–æ–∫–æ–≤. –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—É.')
async def start_registration(ctx, players_per_team: Option(int, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ", required=False, default=5)):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å
    if not await game_state.check_ready_to_start() and len(await game_state.get_registered_players()) == 0:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ
        success, message = await game_state.set_players_per_team(players_per_team)
        if success:
            await ctx.respond(f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ {players_per_team}.", ephemeral=True)
        else:
            await ctx.respond(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ. {message}", ephemeral=True)
    else:
        await ctx.respond("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å –∏–ª–∏ —É–∂–µ –µ—Å—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏.", ephemeral=True)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π game_state
    button = RegisterButton(label="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–∞—Ç—á", game_state=game_state)
    view = View()
    view.add_item(button)
    await ctx.respond('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.', view=view)


@bot.slash_command(name='register', description='–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–∞—Ç—á.')
async def register(ctx):
    is_full, response = await game_state.register_player(ctx.author)
    await ctx.respond(response)
    if is_full:
        # –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–∞, –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Å–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥
        await show_teams(ctx)


@bot.slash_command(name='unregister', description='–û—Ç–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –º–∞—Ç—á.')
async def unregister(ctx):
    response = await game_state.unregister_player(ctx.author)
    await ctx.respond(response)


@bot.slash_command(name='admin_register', description='–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –Ω–∞ –º–∞—Ç—á –∫–æ–º–∞–Ω–¥–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.', default_permission=False)
@discord.default_permissions(administrator=True)
async def admin_register(ctx, member: Option(discord.Member, "–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")):
    is_full, response = await game_state.register_player(member) 
    await ctx.respond(response)
    if is_full:
        # –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–∞, –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Å–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥
        await show_teams(ctx)


@bot.slash_command(name='admin_unregister', description='–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏–≥—Ä–æ–∫–∞ –∫–æ–º–∞–Ω–¥–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.', default_permission=False)
@discord.default_permissions(administrator=True)
async def admin_unregister(ctx, member: Option(discord.Member, "–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")):
    response = await game_state.unregister_player(member) 
    await ctx.respond(response)


@bot.slash_command(name='set_players', description='–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ. –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.', default_permission=False)
@discord.default_permissions(administrator=True)
async def set_players_per_team(ctx, number: Option(int, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ")):
    is_full, response = await game_state.set_players_per_team(number)
    if is_full:
        # –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–∞, –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Å–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥
        await show_teams(ctx)
    else:
        await ctx.respond(response)


@bot.slash_command(name='stop_registration', description='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤. –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.', default_permission=False)
@discord.default_permissions(administrator=True)
async def stop_registration(ctx):
    response = await game_state.clear_registered_players()
    activity = discord.Activity(type=discord.ActivityType.watching, name="–Ω–∞ –≤—ã–¥—Ä—É")
    await bot.change_presence(status=discord.Status.online, activity=activity)
    await asyncio.sleep(3)
    await bot.change_presence(status=discord.Status.online, activity=None)
    await ctx.respond(response)


@bot.slash_command(name='reshuffle', description='–ü–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.')
@discord.default_permissions(administrator=True)
async def reshuffle(ctx):
    await game_state.reshuffle_teams()  # –ü–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –∫–æ–º–∞–Ω–¥


@bot.slash_command(name='show_teams', description='–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥.')
async def show_teams(ctx):
    team1, team2 = await game_state.auto_split_teams()
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ—Å—Ç–∞–≤–æ–º –∫–æ–º–∞–Ω–¥
    if (await game_state.check_ready_to_start()):
        await display_teams(ctx, team1, team2)
    else:
        await ctx.respond("–ö–æ–º–∞–Ω–¥—ã –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã", ephemeral=True)


@bot.slash_command(name='info', description='–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞—Ö.', default_permission=False)
async def info(ctx):
    players_per_team = await game_state.get_players_per_team()
    registered_players = await game_state.get_registered_players()
    mid_index = len(registered_players) // 2
        # –°–æ–∑–¥–∞–µ–º Embed —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–æ–ª–µ–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    embed_info = discord.Embed(
        title="**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏**",
        color=0xFFA500  # –û—Ä–∞–Ω–∂–µ–≤—ã–π —Ü–≤–µ—Ç
    )
    embed_info.add_field(
        name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏–≥—Ä–æ–∫–æ–≤",
        value=f"**{len(registered_players)} –∏–∑ {players_per_team*2}**",  
        inline=False
    )
    if registered_players:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
        registered_players_mentions1 = "\n".join([f'- {player.mention}' for player in registered_players[mid_index:]])
        registered_players_mentions2 = "\n".join([f'- {player.mention}' for player in registered_players[:mid_index]])
        embed_info.add_field(
            name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏:",
            value=registered_players_mentions1,
            inline=True
        )
        embed_info.add_field(
                name="üìã",
                value=registered_players_mentions2,
                inline=True
        )    
    else:
        embed_info.add_field(
            name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏",
            value="–ò–≥—Ä–æ–∫–∏ –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.",
            inline=True
        )
    await ctx.respond(embed=embed_info)


async def display_teams(ctx, team1, team2):
    if await game_state.check_ready_to_start():  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ await
        embed_team1 = discord.Embed(title="**–ö–æ–º–∞–Ω–¥–∞ 1**", description="\n".join([f'- {player.mention}' for player in team1]), color=0x0000FF)
        embed_team2 = discord.Embed(title="**–ö–æ–º–∞–Ω–¥–∞ 2**", description="\n".join([f'- {player.mention}' for player in team2]), color=0xFF0000)
        await ctx.respond(embeds=[embed_team1, embed_team2])  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ await –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    else:
        await ctx.respond("–ö–æ–º–∞–Ω–¥—ã –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã")

bot.run(TOKEN)
